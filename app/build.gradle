apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'


android {
    compileSdkVersion 32

    defaultConfig {
        applicationId "com.toxic.epilkada"
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'org.jetbrains.anko:anko-common:0.9'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:0.30.1-eap13'
    implementation 'id.zelory:compressor:2.1.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation "androidx.activity:activity-ktx:1.6.0"
    implementation "androidx.fragment:fragment-ktx:1.5.3"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'de.hdodenhof:circleimageview:2.1.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'

    //LibraryGraph
    implementation 'com.jjoe64:graphview:4.2.2'

    //OpenCV
    implementation 'com.quickbirdstudios:opencv:3.4.1'
    implementation 'com.quickbirdstudios:opencv:3.4.4-contrib'

    //FIREBASE MLKIT OCR
    //implementation 'com.google.android.gms:play-services-vision:20.1.3'
    //implementation 'com.google.android.gms:play-services-mlkit-text-recognition:18.0.2'
    implementation 'com.google.mlkit:text-recognition:16.0.0-beta6'

    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'

    implementation 'com.github.bumptech.glide:glide:4.10.0'
    implementation 'com.google.firebase:firebase-firestore:21.4.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.firebaseui:firebase-ui-storage:6.2.0'
    implementation 'com.google.firebase:firebase-storage:19.1.1'
    implementation 'com.google.firebase:firebase-auth:19.3.1'
    implementation 'com.firebaseui:firebase-ui-firestore:6.2.0'
    implementation 'com.google.android.gms:play-services-mlkit-face-detection:17.1.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // CameraX core library using the camera2 implementation
    def camerax_version = "1.2.0-beta02"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation("androidx.camera:camera-core:${camerax_version}")
    implementation("androidx.camera:camera-camera2:${camerax_version}")
    // If you want to additionally use the CameraX Lifecycle library
    implementation("androidx.camera:camera-lifecycle:${camerax_version}")
    // If you want to additionally use the CameraX VideoCapture library
    implementation("androidx.camera:camera-video:${camerax_version}")
    // If you want to additionally use the CameraX View class
    implementation("androidx.camera:camera-view:${camerax_version}")
    // If you want to additionally add CameraX ML Kit Vision Integration
    implementation("androidx.camera:camera-mlkit-vision:${camerax_version}")
    // If you want to additionally use the CameraX Extensions library
    implementation("androidx.camera:camera-extensions:${camerax_version}")
}
